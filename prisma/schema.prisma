// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Roles {
  ADMIN
  EDITOR
  USER
}

enum TransactionType {
  TRANSFER
  DEPOSITED
}

model User {
  id         Int       @id @default(autoincrement())
  firstname  String
  lastname   String
  email      String    @unique
  password   String
  Phone      Phone?
  isDeleted  Boolean   @default(false)
  deletedAt  DateTime?
  isVerified Boolean   @default(false)
  role       Roles     @default(USER)
}

model Phone {
  id      Int       @id @default(autoincrement())
  number  String    @unique
  userId  Int       @unique
  User    User      @relation(fields: [userId], references: [id])
  Account Account[]
}

model AccountTypes {
  id            Int            @id @default(autoincrement())
  account_title String
  account_slug  String         @unique
  Account       Account[]
  Transactions  Transactions[]
}

model Account {
  id                   Int            @id @default(autoincrement())
  fullname             String
  accountNumber        String
  balance              Float
  phoneId              Int
  Phone                Phone          @relation(fields: [phoneId], references: [id])
  sentTransactions     Transactions[] @relation("sender")
  recievedTransactions Transactions[] @relation("reciever")
  accountTypeId        Int
  accountType          AccountTypes   @relation(fields: [accountTypeId], references: [id])

  @@unique([accountNumber, accountTypeId, phoneId])
}

model Transactions {
  id          Int             @id @default(autoincrement())
  amount      Float
  description String
  type        TransactionType
  createdAt   DateTime        @default(now())
  sender_id   Int?
  sender      Account?        @relation("sender", fields: [sender_id], references: [id])
  reciever_id Int
  reciever    Account         @relation("reciever", fields: [reciever_id], references: [id])
  accTypeId   Int
  accountType AccountTypes    @relation(fields: [accTypeId], references: [id])
}
